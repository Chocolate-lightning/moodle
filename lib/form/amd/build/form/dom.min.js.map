{"version":3,"file":"dom.min.js","sources":["../../src/form/dom.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This file contains some helper functions to change the visual state of the form elements.\n *\n * @module     core_form/form/dom\n * @copyright  2024 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\n/**\n * TODO: Considerations requiring action:\n *\n * Things old YUI looked for after grabbing the element DOM ancestor (Label management):\n * Classes: fitem fitem_fgroup\n * Data attributes: label[for=\"' + id + '\"]\n * Selectors from old YUI:\n * .fitem [data-fieldtype=\"filepicker\"] input,\n * .fitem [data-fieldtype=\"filemanager\"] input,\n * .fitem [data-fieldtype=\"group\"] input[id*=\"filemanager\"]\n *\n * Guessed selectors:\n * [data-groupname=\"${element}\"]\n *\n * Other things to consider:\n * Special handling for editors & filepickers i.e. Name suffix on editors -> See old YUI?\n * element.setAttribute('aria-disabled', <State Bool>>);\n * element.setAttribute('readonly', 'readonly');\n */\n\n/**\n * Disable an element.\n *\n * @param {HTMLElement} element The element to be disabled.\n */\nexport const lock = (element) => {\n    window.console.log('Lock node:', element);\n    // element.disabled = true;\n    // element.classList.add('disabled');\n};\n\n/**\n * Enable an element.\n *\n * @param {HTMLElement} element The element to be enabled.\n */\nexport const unlock = (element) => {\n    window.console.log('Unlock node:', element);\n    // element.disabled = false;\n    // element.classList.remove('disabled');\n};\n\n/**\n * Hide an element.\n *\n * @param {HTMLElement} element The element to be hidden.\n */\nexport const hide = (element) => {\n    window.console.log('Hide node:', element);\n    // element.hidden = true;\n    // element.classList.add('hidden');\n};\n\n/**\n * Show an element.\n *\n * @param {HTMLElement} element The element to be shown.\n */\nexport const show = (element) => {\n    window.console.log('Show node:', element);\n    // element.hidden = false;\n    // element.classList.remove('hidden');\n};\n"],"names":["element","window","console","log"],"mappings":"mMAkDqBA,UACjBC,OAAOC,QAAQC,IAAI,aAAcH,0BAUdA,UACnBC,OAAOC,QAAQC,IAAI,eAAgBH,wBAUlBA,UACjBC,OAAOC,QAAQC,IAAI,aAAcH,wBAUhBA,UACjBC,OAAOC,QAAQC,IAAI,aAAcH"}