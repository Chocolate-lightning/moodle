{"version":3,"file":"dom.min.js","sources":["../../src/form/dom.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This file contains some helper functions to change the visual state of the form elements.\n *\n * @module     core_form/form/dom\n * @copyright  2024 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\n/**\n * Disable an element.\n *\n * @param {Array<HTMLElement>} elements The element to be disabled.\n */\nexport const lock = (elements) => {\n    elements.forEach(element => {\n        if (element !== null) {\n            element.setAttribute('disabled', 'disabled');\n            // TODO: Editor check.\n            element.setAttribute('readonly', 'readonly');\n            element.dispatchEvent(new Event('form:editorUpdated'));\n        }\n    });\n};\n\n/**\n * Enable an element.\n *\n * @param {Array<HTMLElement>} elements The element to be enabled.\n */\nexport const unlock = (elements) => {\n    elements.forEach(element => {\n        if (element !== null) {\n            element.removeAttribute('disabled');\n            // TODO: Editor check.\n            element.removeAttribute('readonly');\n            element.dispatchEvent(new Event('form:editorUpdated'));\n        }\n    });\n};\n\n/**\n * Hide an element.\n *\n * @param {Array<HTMLElement>} elements The elements to be hidden.\n */\nexport const hide = (elements) => {\n    elements.forEach(element => {\n        // TODO: RadioNodeList is not an instance of HTMLElement, need to find a way to handle this.\n        if (element !== null && element instanceof HTMLElement) {\n            element.setAttribute('disabled', 'disabled');\n            // Check if the element is part of a group otherwise, just grab the nearest wrapping element.\n            const parent = element.closest('[data-groupname]') ? element.closest('[data-groupname]') : element.closest('.fitem');\n            if (parent) {\n                parent.setAttribute('hidden', 'hidden');\n                parent.classList.add('d-none');\n\n                // Hide the label as well.\n                const label = document.querySelector('label[for=\"' + element.id + '\"]');\n                if (label) {\n                    label.setAttribute('hidden', 'hidden');\n                    label.classList.add('d-none');\n                }\n            }\n        }/* else {\n            window.console.log('Hide: Element is not an instance of HTMLElement', element);\n        }*/\n    });\n};\n\n/**\n * Show an element.\n *\n * @param {Array<HTMLElement>} elements The elements to be shown.\n */\nexport const show = (elements) => {\n    elements.forEach(element => {\n        // TODO: RadioNodeList is not an instance of HTMLElement, need to find a way to handle this.\n        if (element !== null && element instanceof HTMLElement) {\n            element.removeAttribute('disabled');\n            // Check if the element is part of a group otherwise, just grab the nearest wrapping element.\n            const parent = element.closest('[data-groupname]') ? element.closest('[data-groupname]') : element.closest('.fitem');\n            if (parent) {\n                parent.removeAttribute('hidden');\n                parent.classList.remove('d-none');\n\n                // Show the label as well.\n                const label = document.querySelector('label[for=\"' + element.id + '\"]');\n                if (label) {\n                    label.removeAttribute('hidden');\n                    label.classList.remove('d-none');\n                }\n            }\n        }/* else {\n            window.console.log('Show: Element is not an instance of HTMLElement', element);\n        }*/\n    });\n};\n"],"names":["elements","forEach","element","setAttribute","dispatchEvent","Event","removeAttribute","HTMLElement","parent","closest","classList","add","label","document","querySelector","id","remove"],"mappings":"mMA8BqBA,WACjBA,SAASC,SAAQC,UACG,OAAZA,UACAA,QAAQC,aAAa,WAAY,YAEjCD,QAAQC,aAAa,WAAY,YACjCD,QAAQE,cAAc,IAAIC,MAAM,4CAUrBL,WACnBA,SAASC,SAAQC,UACG,OAAZA,UACAA,QAAQI,gBAAgB,YAExBJ,QAAQI,gBAAgB,YACxBJ,QAAQE,cAAc,IAAIC,MAAM,0CAUvBL,WACjBA,SAASC,SAAQC,aAEG,OAAZA,SAAoBA,mBAAmBK,YAAa,CACpDL,QAAQC,aAAa,WAAY,kBAE3BK,OAASN,QAAQO,QAAQ,oBAAsBP,QAAQO,QAAQ,oBAAsBP,QAAQO,QAAQ,aACvGD,OAAQ,CACRA,OAAOL,aAAa,SAAU,UAC9BK,OAAOE,UAAUC,IAAI,gBAGfC,MAAQC,SAASC,cAAc,cAAgBZ,QAAQa,GAAK,MAC9DH,QACAA,MAAMT,aAAa,SAAU,UAC7BS,MAAMF,UAAUC,IAAI,+BAcnBX,WACjBA,SAASC,SAAQC,aAEG,OAAZA,SAAoBA,mBAAmBK,YAAa,CACpDL,QAAQI,gBAAgB,kBAElBE,OAASN,QAAQO,QAAQ,oBAAsBP,QAAQO,QAAQ,oBAAsBP,QAAQO,QAAQ,aACvGD,OAAQ,CACRA,OAAOF,gBAAgB,UACvBE,OAAOE,UAAUM,OAAO,gBAGlBJ,MAAQC,SAASC,cAAc,cAAgBZ,QAAQa,GAAK,MAC9DH,QACAA,MAAMN,gBAAgB,UACtBM,MAAMF,UAAUM,OAAO"}