define("core_form/form/rules",["exports","./display"],(function(_exports,_display){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0;return _exports.default=class{common(){return{displayMap:(0,_display.mapTemplate)(),lock:!1}}notchecked(target){let{displayMap:displayMap,lock:lock}=this.common();return this.formInstance.getDependantsOfType(target.name,"notchecked").forEach(((dependant,key)=>{"hidden"!==target.type&&(lock=Boolean(key)!==target.checked,(0,_display.determineDisplayMap)(dependant,displayMap,lock))})),displayMap}checked(target){let{displayMap:displayMap,lock:lock}=this.common();return this.formInstance.getDependantsOfType(target.name,"checked").forEach(((dependant,key)=>{"hidden"!==target.type&&(lock=Boolean(key)===target.checked,(0,_display.determineDisplayMap)(dependant,displayMap,lock))})),displayMap}eq(target){let{displayMap:displayMap,lock:lock}=this.common();return this.formInstance.getDependantsOfType(target.name,"eq").forEach(((dependant,key)=>{lock="radio"===target.type?String(key)===String(this.getRadioFieldVal(target)):"hidden"===target.type&&this.getHiddenCkbs(target)?target.checked===Boolean(key):"checkbox"!==target.type||target.checked?target.classList.contains("filepickerhidden")?!M.form_filepicker.instances[target.id].fileadded:target.value===key:target.checked===Boolean(key),(0,_display.determineDisplayMap)(dependant,displayMap,lock)})),displayMap}neq(target){var _this$formInstance$ge,_this$formInstance$ge2,_this$formInstance$ge3,_this$formInstance$ge4,_this$formInstance$ge5,_this$formInstance$ge6;let{displayMap:displayMap,lock:lock}=this.common();return new Map([...null!==(_this$formInstance$ge=null===(_this$formInstance$ge2=this.formInstance.getDependantsOfType(target.name,"neq"))||void 0===_this$formInstance$ge2?void 0:_this$formInstance$ge2.entries())&&void 0!==_this$formInstance$ge?_this$formInstance$ge:[],...null!==(_this$formInstance$ge3=null===(_this$formInstance$ge4=this.formInstance.getDependantsOfType(target.name,"ne"))||void 0===_this$formInstance$ge4?void 0:_this$formInstance$ge4.entries())&&void 0!==_this$formInstance$ge3?_this$formInstance$ge3:[],...null!==(_this$formInstance$ge5=null===(_this$formInstance$ge6=this.formInstance.getDependantsOfType(target.name,"noteq"))||void 0===_this$formInstance$ge6?void 0:_this$formInstance$ge6.entries())&&void 0!==_this$formInstance$ge5?_this$formInstance$ge5:[]]).forEach(((dependant,key)=>{lock="radio"===target.type?String(key)!==String(this.getRadioFieldVal(target)):"hidden"===target.type&&this.getHiddenCkbs(target)?target.checked!==Boolean(key):"checkbox"!==target.type||target.checked?target.classList.contains("filepickerhidden")?!!M.form_filepicker.instances[target.id].fileadded:target.value!==key:target.checked===Boolean(key),(0,_display.determineDisplayMap)(dependant,displayMap,lock)})),displayMap}in(target){let{displayMap:displayMap,lock:lock}=this.common();return this.formInstance.getDependantsOfType(target.name,"in").forEach(((dependant,key)=>{lock=key.split("|").includes(target.value),(0,_display.determineDisplayMap)(dependant,displayMap,lock)})),displayMap}getRadioFieldVal(target){return"radio"===target.type?this.formInstance.form.elements.namedItem(target.name).value:target.value}getHiddenCkbs(target){return 0!==this.formInstance.form.querySelectorAll('input[type=checkbox][name="'+target.name+'"]').length}constructor(form){var obj,key,value;value=void 0,(key="formInstance")in(obj=this)?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,this.formInstance=form}},_exports.default}));

//# sourceMappingURL=rules.min.js.map