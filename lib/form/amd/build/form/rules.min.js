define("core_form/form/rules",["exports","./display"],(function(_exports,_display){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0;return _exports.default=class{notchecked(target){const displayMap=this.form.mapTemplate();let lock=!1;return this.getDependantsOfType(target.name,"notchecked").forEach(((dependant,key)=>{lock=Boolean(key)!==target.checked,(0,_display.determineDisplayMap)(dependant,displayMap,lock)})),this.form.displayMapPrune(displayMap)}checked(target){const displayMap=this.form.mapTemplate();let lock=!1;return this.getDependantsOfType(target.name,"checked").forEach(((dependant,key)=>{lock=Boolean(key)===target.checked,(0,_display.determineDisplayMap)(dependant,displayMap,lock)})),this.form.displayMapPrune(displayMap)}eq(target){const displayMap=this.form.mapTemplate(),rTarget=this.getRadioFieldVal(target);let lock=!1;return this.getDependantsOfType(target.name,"eq").forEach(((dependant,key)=>"radio"===target.type?(lock=String(key)===String(rTarget.value),void(0,_display.determineDisplayMap)(dependant,displayMap,lock)):"hidden"===target.type&&this.getHiddenCkbs(target)?(lock=target.checked===Boolean(key),void(0,_display.determineDisplayMap)(dependant,displayMap,lock)):"checkbox"!==target.type||target.checked?void(target.classList.contains("filepickerhidden")?(lock=!M.form_filepicker.instances[target.id].fileadded,(0,_display.determineDisplayMap)(dependant,displayMap,lock)):"select"===target.tagName.toLowerCase()&&target.multiple?window.console.error("This is a multiple select",target):(lock=target.value===key,(0,_display.determineDisplayMap)(dependant,displayMap,lock))):(lock=target.checked===Boolean(key),void(0,_display.determineDisplayMap)(dependant,displayMap,lock)))),this.form.displayMapPrune(displayMap)}neq(target){var _this$getDependantsOf,_this$getDependantsOf2,_this$getDependantsOf3,_this$getDependantsOf4,_this$getDependantsOf5,_this$getDependantsOf6;const displayMap=this.form.mapTemplate(),rTarget=this.getRadioFieldVal(target);let lock=!1;const maps=[...null!==(_this$getDependantsOf=null===(_this$getDependantsOf2=this.getDependantsOfType(target.name,"neq"))||void 0===_this$getDependantsOf2?void 0:_this$getDependantsOf2.entries())&&void 0!==_this$getDependantsOf?_this$getDependantsOf:[],...null!==(_this$getDependantsOf3=null===(_this$getDependantsOf4=this.getDependantsOfType(target.name,"ne"))||void 0===_this$getDependantsOf4?void 0:_this$getDependantsOf4.entries())&&void 0!==_this$getDependantsOf3?_this$getDependantsOf3:[],...null!==(_this$getDependantsOf5=null===(_this$getDependantsOf6=this.getDependantsOfType(target.name,"noteq"))||void 0===_this$getDependantsOf6?void 0:_this$getDependantsOf6.entries())&&void 0!==_this$getDependantsOf5?_this$getDependantsOf5:[]];return new Map(maps).forEach(((dependant,key)=>"radio"===target.type?(lock=String(key)!==String(rTarget.value),void(0,_display.determineDisplayMap)(dependant,displayMap,lock)):"hidden"===target.type&&this.getHiddenCkbs(target)?(lock=target.checked!==Boolean(key),void(0,_display.determineDisplayMap)(dependant,displayMap,lock)):"checkbox"!==target.type||target.checked?void(target.classList.contains("filepickerhidden")?(lock=!!M.form_filepicker.instances[target.id].fileadded,(0,_display.determineDisplayMap)(dependant,displayMap,lock)):"select"===target.tagName.toLowerCase()&&target.multiple?window.console.error("This is a multiple select",target):(lock=target.value!==key,(0,_display.determineDisplayMap)(dependant,displayMap,lock))):(lock=target.checked===Boolean(key),void(0,_display.determineDisplayMap)(dependant,displayMap,lock)))),this.form.displayMapPrune(displayMap)}in(target){const displayMap=this.form.mapTemplate();let lock=!1;return this.getDependantsOfType(target.name,"in").forEach(((dependant,key)=>{lock=key.split("|").includes(target.value),(0,_display.determineDisplayMap)(dependant,displayMap,lock)})),this.form.displayMapPrune(displayMap)}getDependantsOfType(element,type){return this.form.getDependantsOfType(element,type)}getRadioFieldVal(target){return"radio"===target.type?this.form.form.elements.namedItem(target.name):target}getHiddenCkbs(target){return 0!==this.form.form.querySelectorAll('input[type=checkbox][name="'+target.name+'"]').length}constructor(form){var obj,key,value;value=void 0,(key="form")in(obj=this)?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,this.form=form}},_exports.default}));

//# sourceMappingURL=rules.min.js.map