{"version":3,"file":"util.min.js","sources":["../../src/form/util.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This file contains small helper functions used within the form.\n *\n * @module     core_form/form/util\n * @copyright  2024 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\n/**\n * A small object that defines the behaviour of the dependency rules for readability.\n *\n * @type {{hide: number, disable: number}}\n */\nconst dependencyBehaviour = {\n    disable: 0,\n    hide: 1,\n};\n\n/**\n * Considering the dependant object and if we need to lock it, assign the elements to the correct displayMap key.\n *\n * @param {Object<Number, Array>} dependant The dependant object that contains the rules for hiding and locking.\n * @param {Map<String, Array>} displayMap The aggregation of elements that should be shown, hidden, locked, or unlocked.\n * @param {Boolean} lock According to the rules, should the element be locked or unlocked.\n */\nexport const determineDisplayMap = (dependant, displayMap, lock) => {\n    const hide = dependant.hasOwnProperty(dependencyBehaviour.hide) ? lock : false;\n    if (dependant.hasOwnProperty(dependencyBehaviour.disable)) {\n        if (lock) {\n            displayMap.get('lock').push(dependant[dependencyBehaviour.disable]);\n        } else {\n            displayMap.get('unlock').push(dependant[dependencyBehaviour.disable]);\n        }\n    } else if (dependant.hasOwnProperty(dependencyBehaviour.hide)) {\n        // Prevent showing an element if it has already been defined hidden.\n        if (!hide && !displayMap.get('hide').toString().includes(dependant[dependencyBehaviour.hide].toString())) {\n            displayMap.get('show').push(dependant[dependencyBehaviour.hide]);\n        } else {\n            displayMap.get('hide').push(dependant[dependencyBehaviour.hide]);\n        }\n    }\n};\n"],"names":["dependencyBehaviour","dependant","displayMap","lock","hide","hasOwnProperty","get","push","toString","includes"],"mappings":"+JA8BMA,4BACO,EADPA,yBAEI,+BAUyB,CAACC,UAAWC,WAAYC,cACjDC,OAAOH,UAAUI,eAAeL,2BAA4BG,KAC9DF,UAAUI,eAAeL,6BACrBG,KACAD,WAAWI,IAAI,QAAQC,KAAKN,UAAUD,8BAEtCE,WAAWI,IAAI,UAAUC,KAAKN,UAAUD,8BAErCC,UAAUI,eAAeL,4BAE3BI,MAASF,WAAWI,IAAI,QAAQE,WAAWC,SAASR,UAAUD,0BAA0BQ,YAGzFN,WAAWI,IAAI,QAAQC,KAAKN,UAAUD,2BAFtCE,WAAWI,IAAI,QAAQC,KAAKN,UAAUD"}