{"version":3,"file":"rules.min.js","sources":["../../src/form/rules.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This file contains a set of rules that elements can be compared against to determine if they should be shown, hidden, etc...\n *\n * @See /lib/pear/HTML/QuickForm/Rule/Compare.php\n * @See https://pear.php.net/manual/en/package.html.html-quickform2.rules.list.php for a list of available rules.\n *\n * @module     core_form/form/rules\n * @copyright  2024 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nexport default class Rules {\n    form = '';\n    dependencyBehaviour = {\n        disable: 0,\n        hide: 1,\n    };\n\n    // Shorthand helper rather than requiring devs to export the value and use a eq or neq check.\n\n    /**\n     * Compare the value of the changed DOM node to the requested rule.\n     *\n     * @param {HTMLFormElement} target The changed DOM node to be compared against the requested rule.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    notchecked(target) {\n        const dependants = this.getDependantsOfType(target.name, 'notchecked');\n        let [hide, show, lock, unlock] = [[], [], [], []];\n\n        dependants.forEach((dependant, key) => {\n            if (Boolean(key) === target.checked) {\n                this.showUnlock(dependant, show, unlock);\n            } else {\n                this.hideLock(dependant, hide, lock);\n            }\n        });\n\n        return {hide, show, lock, unlock};\n    }\n\n    /**\n     * Compare the value of the changed DOM node to the requested rule.\n     *\n     * @param {HTMLFormElement} target The changed DOM node to be compared against the requested rule.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    checked(target) {\n        const dependants = this.getDependantsOfType(target.name, 'checked');\n        let [hide, show, lock, unlock] = [[], [], [], []];\n\n        dependants.forEach((dependant, key) => {\n            if (Boolean(key) !== target.checked) {\n                this.showUnlock(dependant, show, unlock);\n            } else {\n                this.hideLock(dependant, hide, lock);\n            }\n        });\n\n        return {hide, show, lock, unlock};\n    }\n\n    // Handlers for default rules defined in the links in the JSDoc for this class.\n\n    /**\n     * Compare the value of the changed DOM node to the requested rule.\n     *\n     * @param {HTMLFormElement} target The changed DOM node to be compared against the requested rule.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    eq(target) {\n        const dependants = this.getDependantsOfType(target.name, 'eq');\n        let [hide, show, lock, unlock] = [[], [], [], []];\n\n        dependants.forEach((dependant, key) => {\n            if (key === target.value) {\n                this.showUnlock(dependant, show, unlock);\n            } else {\n                this.hideLock(dependant, hide, lock);\n            }\n        });\n        return {hide, show, lock, unlock};\n    }\n\n    /**\n     * Compare the value of the changed DOM node to the requested rule.\n     *\n     * @param {HTMLFormElement} target The changed DOM node to be compared against the requested rule.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    neq(target) {\n        const dependants = this.getDependantsOfType(target.name, 'neq');\n        let [hide, show, lock, unlock] = [[], [], [], []];\n\n        dependants.forEach((dependant, key) => {\n            if (key !== target.value) {\n                this.hideLock(dependant, hide, lock);\n            } else {\n                this.showUnlock(dependant, show, unlock);\n            }\n        });\n        return {hide, show, lock, unlock};\n    }\n\n    /**\n     * TODO: Compare the value of the changed DOM node to the requested rule.\n     * TODO: Whats the difference between neq, ne && noteq?\n     *\n     * @param {HTMLFormElement} target The changed DOM node to be compared against the requested rule.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    ne(target) {\n        const dependants = this.getDependantsOfType(target.name, 'ne');\n        let [hide, show, lock, unlock] = [[], [], [], []];\n\n        dependants.forEach((dependant, key) => {\n            if (key !== target.value) {\n                this.hideLock(dependant, hide, lock);\n            } else {\n                this.showUnlock(dependant, show, unlock);\n            }\n        });\n\n        return {hide, show, lock, unlock};\n    }\n\n    // TODO: Document these different rule types that are Moodle? only??\n\n    /**\n     * Compare the value of the changed DOM node to the requested rule.\n     *\n     * @param {HTMLFormElement} target The changed DOM node to be compared against the requested rule.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    in(target) {\n        const dependants = this.getDependantsOfType(target.name, 'in');\n        let [hide, show, lock, unlock] = [[], [], [], []];\n\n        dependants.forEach((dependant, key) => {\n            if (key.split('|').includes(target.value)) {\n                this.hideLock(dependant, hide, lock);\n            } else {\n                this.showUnlock(dependant, show, unlock);\n            }\n        });\n\n        return {hide, show, lock, unlock};\n    }\n\n    /**\n     * TODO: Compare the value of the changed DOM node to the requested rule.\n     *\n     * @param {HTMLFormElement} target The changed DOM node to be compared against the requested rule.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    hide(target) {\n        const dependants = this.getDependantsOfType(target.name, 'eq');\n        let [hide, show, lock, unlock] = [[], [], [], []];\n\n        window.console.log(dependants);\n\n        return {hide, show, lock, unlock};\n    }\n\n    /**\n     * TODO: Compare the value of the changed DOM node to the requested rule.\n     *\n     * @param {HTMLFormElement} target The changed DOM node to be compared against the requested rule.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    default(target) {\n        const dependants = this.getDependantsOfType(target.name, 'eq');\n        let [hide, show, lock, unlock] = [[], [], [], []];\n\n        window.console.log(dependants);\n\n        return {hide, show, lock, unlock};\n    }\n\n    /**\n     * Considering the dependant object, show and unlock the elements that are required.\n     *\n     * @param {Object<Number, Array>} dependant The dependant object that contains the rules for showing and unlocking.\n     * @param {Array} show The elements that should be shown if the rule for hiding is set.\n     * @param {Array} unlock The elements that should be unlocked if the rule for locking is set.\n     */\n    showUnlock(dependant, show, unlock) {\n        if (dependant.hasOwnProperty(this.dependencyBehaviour.hide)) {\n            show.push(...dependant[this.dependencyBehaviour.hide]);\n        }\n        if (dependant.hasOwnProperty(this.dependencyBehaviour.disable)) {\n            unlock.push(...dependant[this.dependencyBehaviour.disable]);\n        }\n    }\n\n    /**\n     * Considering the dependant object, hide and lock the elements that are required.\n     *\n     * @param {Object<Number, Array>} dependant The dependant object that contains the rules for hiding and locking.\n     * @param {Array} hide The elements that should be hidden if the rule for hiding is set.\n     * @param {Array} lock The elements that should be locked if the rule for locking is set.\n     */\n    hideLock(dependant, hide, lock) {\n        if (dependant.hasOwnProperty(this.dependencyBehaviour.hide)) {\n            hide.push(...dependant[this.dependencyBehaviour.hide]);\n        }\n        if (dependant.hasOwnProperty(this.dependencyBehaviour.disable)) {\n            lock.push(...dependant[this.dependencyBehaviour.disable]);\n        }\n    }\n\n    /**\n     * TODO: Document...\n     *\n     * @param {String} element The name of the element to get the dependants for.\n     * @param {String} type The rule type to get the dependants for.\n     * @returns {*|[]}\n     */\n    getDependantsOfType(element, type) {\n        return this.form.getDependantsOfType(element, type);\n    }\n\n    /**\n     * Constructor for the Rules class.\n     * @param {Form} form The form object that the rules are being applied to.\n     */\n    constructor(form) {\n        this.form = form;\n    }\n}\n"],"names":["notchecked","target","dependants","this","getDependantsOfType","name","hide","show","lock","unlock","forEach","dependant","key","Boolean","checked","showUnlock","hideLock","eq","value","neq","ne","in","split","includes","window","console","log","default","hasOwnProperty","dependencyBehaviour","push","disable","element","type","form","constructor"],"mappings":"gVA2CIA,WAAWC,cACDC,WAAaC,KAAKC,oBAAoBH,OAAOI,KAAM,kBACpDC,KAAMC,KAAMC,KAAMC,QAAU,CAAC,GAAI,GAAI,GAAI,WAE9CP,WAAWQ,SAAQ,CAACC,UAAWC,OACvBC,QAAQD,OAASX,OAAOa,aACnBC,WAAWJ,UAAWJ,KAAME,aAE5BO,SAASL,UAAWL,KAAME,SAIhC,CAACF,KAAAA,KAAMC,KAAAA,KAAMC,KAAAA,KAAMC,OAAAA,QAS9BK,QAAQb,cACEC,WAAaC,KAAKC,oBAAoBH,OAAOI,KAAM,eACpDC,KAAMC,KAAMC,KAAMC,QAAU,CAAC,GAAI,GAAI,GAAI,WAE9CP,WAAWQ,SAAQ,CAACC,UAAWC,OACvBC,QAAQD,OAASX,OAAOa,aACnBC,WAAWJ,UAAWJ,KAAME,aAE5BO,SAASL,UAAWL,KAAME,SAIhC,CAACF,KAAAA,KAAMC,KAAAA,KAAMC,KAAAA,KAAMC,OAAAA,QAW9BQ,GAAGhB,cACOC,WAAaC,KAAKC,oBAAoBH,OAAOI,KAAM,UACpDC,KAAMC,KAAMC,KAAMC,QAAU,CAAC,GAAI,GAAI,GAAI,WAE9CP,WAAWQ,SAAQ,CAACC,UAAWC,OACvBA,MAAQX,OAAOiB,WACVH,WAAWJ,UAAWJ,KAAME,aAE5BO,SAASL,UAAWL,KAAME,SAGhC,CAACF,KAAAA,KAAMC,KAAAA,KAAMC,KAAAA,KAAMC,OAAAA,QAS9BU,IAAIlB,cACMC,WAAaC,KAAKC,oBAAoBH,OAAOI,KAAM,WACpDC,KAAMC,KAAMC,KAAMC,QAAU,CAAC,GAAI,GAAI,GAAI,WAE9CP,WAAWQ,SAAQ,CAACC,UAAWC,OACvBA,MAAQX,OAAOiB,WACVF,SAASL,UAAWL,KAAME,WAE1BO,WAAWJ,UAAWJ,KAAME,WAGlC,CAACH,KAAAA,KAAMC,KAAAA,KAAMC,KAAAA,KAAMC,OAAAA,QAU9BW,GAAGnB,cACOC,WAAaC,KAAKC,oBAAoBH,OAAOI,KAAM,UACpDC,KAAMC,KAAMC,KAAMC,QAAU,CAAC,GAAI,GAAI,GAAI,WAE9CP,WAAWQ,SAAQ,CAACC,UAAWC,OACvBA,MAAQX,OAAOiB,WACVF,SAASL,UAAWL,KAAME,WAE1BO,WAAWJ,UAAWJ,KAAME,WAIlC,CAACH,KAAAA,KAAMC,KAAAA,KAAMC,KAAAA,KAAMC,OAAAA,QAW9BY,GAAGpB,cACOC,WAAaC,KAAKC,oBAAoBH,OAAOI,KAAM,UACpDC,KAAMC,KAAMC,KAAMC,QAAU,CAAC,GAAI,GAAI,GAAI,WAE9CP,WAAWQ,SAAQ,CAACC,UAAWC,OACvBA,IAAIU,MAAM,KAAKC,SAAStB,OAAOiB,YAC1BF,SAASL,UAAWL,KAAME,WAE1BO,WAAWJ,UAAWJ,KAAME,WAIlC,CAACH,KAAAA,KAAMC,KAAAA,KAAMC,KAAAA,KAAMC,OAAAA,QAS9BH,KAAKL,cACKC,WAAaC,KAAKC,oBAAoBH,OAAOI,KAAM,UACpDC,KAAMC,KAAMC,KAAMC,QAAU,CAAC,GAAI,GAAI,GAAI,WAE9Ce,OAAOC,QAAQC,IAAIxB,YAEZ,CAACI,KAAAA,KAAMC,KAAAA,KAAMC,KAAAA,KAAMC,OAAAA,QAS9BkB,QAAQ1B,cACEC,WAAaC,KAAKC,oBAAoBH,OAAOI,KAAM,UACpDC,KAAMC,KAAMC,KAAMC,QAAU,CAAC,GAAI,GAAI,GAAI,WAE9Ce,OAAOC,QAAQC,IAAIxB,YAEZ,CAACI,KAAAA,KAAMC,KAAAA,KAAMC,KAAAA,KAAMC,OAAAA,QAU9BM,WAAWJ,UAAWJ,KAAME,QACpBE,UAAUiB,eAAezB,KAAK0B,oBAAoBvB,OAClDC,KAAKuB,QAAQnB,UAAUR,KAAK0B,oBAAoBvB,OAEhDK,UAAUiB,eAAezB,KAAK0B,oBAAoBE,UAClDtB,OAAOqB,QAAQnB,UAAUR,KAAK0B,oBAAoBE,UAW1Df,SAASL,UAAWL,KAAME,MAClBG,UAAUiB,eAAezB,KAAK0B,oBAAoBvB,OAClDA,KAAKwB,QAAQnB,UAAUR,KAAK0B,oBAAoBvB,OAEhDK,UAAUiB,eAAezB,KAAK0B,oBAAoBE,UAClDvB,KAAKsB,QAAQnB,UAAUR,KAAK0B,oBAAoBE,UAWxD3B,oBAAoB4B,QAASC,aAClB9B,KAAK+B,KAAK9B,oBAAoB4B,QAASC,MAOlDE,YAAYD,kCAtNL,+CACe,CAClBH,QAAS,EACTzB,KAAM,SAoND4B,KAAOA"}