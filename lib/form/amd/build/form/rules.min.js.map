{"version":3,"file":"rules.min.js","sources":["../../src/form/rules.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This file contains a set of rules that elements can be compared against to determine if they should be shown, hidden, etc...\n *\n * @module     core_form/form/rules\n * @copyright  2024 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport class Rules {\n\n    // eslint-disable-next-line no-unused-vars\n    notChecked(value, dependants) {}\n\n    // eslint-disable-next-line no-unused-vars\n    checked(value, dependants) {}\n\n    /**\n     * Compare the value of the changed DOM node to the requested rule.\n     *\n     * @param {String} value The value of the changed DOM node to be compared against the requested rule.\n     * @param {Map<String, Object>} dependants The values to compare vs the DOM and associated actions and elements to mutate.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    eq(value, dependants) {\n        let hide = [];\n        let show = [];\n        let lock = [];\n        let unlock = [];\n        dependants.forEach((dependant, key) => {\n            if (key === value) {\n                window.console.log('The eq value matches the condition');\n                this.showUnlock(dependant, show, unlock);\n            } else {\n                window.console.log('The eq value requires action');\n                this.hideLock(dependant, hide, lock);\n            }\n        });\n        return {hide, lock, show, unlock};\n    }\n\n    /**\n     * Compare the value of the changed DOM node to the requested rule.\n     *\n     * @param {String} value The value of the changed DOM node to be compared against the requested rule.\n     * @param {Map<String, Object>} dependants The values to compare vs the DOM and associated actions and elements to mutate.\n     * @returns {{hide: *[], unlock: *[], show: *[], lock: *[]}} Actions to be taken along with elements that should be affected.\n     */\n    neq(value, dependants) {\n        let hide = [];\n        let show = [];\n        let lock = [];\n        let unlock = [];\n        dependants.forEach((dependant, key) => {\n            if (key !== value) {\n                window.console.log('The neq value requires action');\n                this.hideLock(dependant, hide, lock);\n            } else {\n                window.console.log('The neq value matches the condition');\n                this.showUnlock(dependant, show, unlock);\n            }\n        });\n        return {hide, lock, show, unlock};\n    }\n\n    /**\n     * Considering the dependant object, show and unlock the elements that are required.\n     *\n     * @param {Object<Number, Array>} dependant The dependant object that contains the rules for showing and unlocking.\n     * @param {Array} show The elements that should be shown if the rule for hiding is set.\n     * @param {Array} unlock The elements that should be unlocked if the rule for locking is set.\n     */\n    showUnlock(dependant, show, unlock) {\n        if (dependant.hasOwnProperty(this.dependencyBehaviour.hide)) {\n            show.push(...dependant[this.dependencyBehaviour.hide]);\n        }\n        if (dependant.hasOwnProperty(this.dependencyBehaviour.disable)) {\n            unlock.push(...dependant[this.dependencyBehaviour.disable]);\n        }\n    }\n\n    /**\n     * Considering the dependant object, hide and lock the elements that are required.\n     *\n     * @param {Object<Number, Array>} dependant The dependant object that contains the rules for hiding and locking.\n     * @param {Array} hide The elements that should be hidden if the rule for hiding is set.\n     * @param {Array} lock The elements that should be locked if the rule for locking is set.\n     */\n    hideLock(dependant, hide, lock) {\n        if (dependant.hasOwnProperty(this.dependencyBehaviour.hide)) {\n            hide.push(...dependant[this.dependencyBehaviour.hide]);\n        }\n        if (dependant.hasOwnProperty(this.dependencyBehaviour.disable)) {\n            lock.push(...dependant[this.dependencyBehaviour.disable]);\n        }\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    ne(value, dependants) {}\n\n    // eslint-disable-next-line no-unused-vars\n    gt(value, dependants) {}\n\n    // eslint-disable-next-line no-unused-vars\n    lt(value, dependants) {}\n\n    inSet() {}\n\n    hide() {}\n\n    default() {}\n\n    /**\n     * Constructor for the Rules class.\n     */\n    constructor() {\n        this.dependencyBehaviour = {\n            disable: 0,\n            hide: 1,\n        };\n    }\n}\n"],"names":["notChecked","value","dependants","checked","eq","hide","show","lock","unlock","forEach","dependant","key","window","console","log","showUnlock","hideLock","neq","hasOwnProperty","this","dependencyBehaviour","push","disable","ne","gt","lt","inSet","default","constructor"],"mappings":";;;;;;;;MA0BIA,WAAWC,MAAOC,aAGlBC,QAAQF,MAAOC,aASfE,GAAGH,MAAOC,gBACFG,KAAO,GACPC,KAAO,GACPC,KAAO,GACPC,OAAS,UACbN,WAAWO,SAAQ,CAACC,UAAWC,OACvBA,MAAQV,OACRW,OAAOC,QAAQC,IAAI,2CACdC,WAAWL,UAAWJ,KAAME,UAEjCI,OAAOC,QAAQC,IAAI,qCACdE,SAASN,UAAWL,KAAME,UAGhC,CAACF,KAAAA,KAAME,KAAAA,KAAMD,KAAAA,KAAME,OAAAA,QAU9BS,IAAIhB,MAAOC,gBACHG,KAAO,GACPC,KAAO,GACPC,KAAO,GACPC,OAAS,UACbN,WAAWO,SAAQ,CAACC,UAAWC,OACvBA,MAAQV,OACRW,OAAOC,QAAQC,IAAI,sCACdE,SAASN,UAAWL,KAAME,QAE/BK,OAAOC,QAAQC,IAAI,4CACdC,WAAWL,UAAWJ,KAAME,YAGlC,CAACH,KAAAA,KAAME,KAAAA,KAAMD,KAAAA,KAAME,OAAAA,QAU9BO,WAAWL,UAAWJ,KAAME,QACpBE,UAAUQ,eAAeC,KAAKC,oBAAoBf,OAClDC,KAAKe,QAAQX,UAAUS,KAAKC,oBAAoBf,OAEhDK,UAAUQ,eAAeC,KAAKC,oBAAoBE,UAClDd,OAAOa,QAAQX,UAAUS,KAAKC,oBAAoBE,UAW1DN,SAASN,UAAWL,KAAME,MAClBG,UAAUQ,eAAeC,KAAKC,oBAAoBf,OAClDA,KAAKgB,QAAQX,UAAUS,KAAKC,oBAAoBf,OAEhDK,UAAUQ,eAAeC,KAAKC,oBAAoBE,UAClDf,KAAKc,QAAQX,UAAUS,KAAKC,oBAAoBE,UAKxDC,GAAGtB,MAAOC,aAGVsB,GAAGvB,MAAOC,aAGVuB,GAAGxB,MAAOC,aAEVwB,SAEArB,QAEAsB,WAKAC,mBACSR,oBAAsB,CACvBE,QAAS,EACTjB,KAAM"}