define("core_form/form",["exports","./changechecker","./submit","./form/rules","./form/dom","core/pending"],(function(_exports,FormChangeChecker,Submit,_rules,MutateDom,_pending){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,FormChangeChecker=_interopRequireWildcard(FormChangeChecker),Submit=_interopRequireWildcard(Submit),_rules=_interopRequireDefault(_rules),MutateDom=_interopRequireWildcard(MutateDom),_pending=_interopRequireDefault(_pending);class Form{constructor(formID,dependencies){_defineProperty(this,"form",void 0),_defineProperty(this,"dependencies",void 0),_defineProperty(this,"editors",new Map),this.form=document.querySelector("#".concat(formID)),this.dependencies=this.getDependencyMapper(dependencies),this.isEditor(),this.rules=new _rules.default(this),this.applyInitialState(),this.registerEventListeners(),FormChangeChecker.watchForm(this.form)}applyInitialState(){[...this.form.elements].forEach((element=>{this.dependencies.has(element.name)&&this.domDispatch(this.displayMapPrune(this.dispatchDependencyRules(element)))}))}registerEventListeners(){this.form.addEventListener("change",(async e=>{if("submit"===e.target.type&&(FormChangeChecker.resetFormDirtyState(this.form),Submit.init(e.target.id)),"reset"===e.target.type&&(FormChangeChecker.resetFormDirtyState(this.form),this.form.reset()),this.dependencies.has(e.target.name)){FormChangeChecker.markFormChangedFromNode(e.target);const pendingPromise=new _pending.default("core/form:update");await this.domDispatch(this.displayMapPrune(this.dispatchDependencyRules(e.target))),pendingPromise.resolve()}}))}dispatchDependencyRules(target){const displayMap=this.mapTemplate();return this.dependencies.get(target.name).forEach(((dependants,ruleName)=>{(this.rules[ruleName]?this.rules[ruleName](target):this.rules.neq(target)).forEach(((nodeNames,displayOption)=>{displayMap.get(displayOption).push(...nodeNames)}))})),displayMap}displayMapPrune(displayMap){const removeunlockifhidden=displayMap.get("unlock").filter((x=>!displayMap.get("hide").toString().includes(x.toString())));displayMap.set("unlock",removeunlockifhidden);for(const[key,value]of displayMap)0===value.length&&displayMap.delete(key);return displayMap}getDependantsOfType(element,type){var _this$dependencies$ge;return"undefined"!==this.dependencies.get(element)&&null!==(_this$dependencies$ge=this.dependencies.get(element).get(type))&&void 0!==_this$dependencies$ge?_this$dependencies$ge:[]}domDispatch(elNamesMap){window.console.log("elNamesMap",elNamesMap),elNamesMap.forEach(((elements,domUpdateOpt)=>{if(!MutateDom[domUpdateOpt])return;this.elementNamesToDomNodes(elements).forEach((node=>{null!==node&&MutateDom[domUpdateOpt](node)}))}))}elementNamesToDomNodes(elementNames){return elementNames.map((element=>element.map((element2=>this.isEditor(element2)?this.form.elements.namedItem("".concat(element2,"[text]")):this.form.elements.namedItem(element2)))))}isEditor(){let elementName=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(0===this.editors.size){const fEditors=this.form.querySelectorAll('[data-fieldtype="editor"] textarea');Array.from(fEditors).forEach((node=>{this.editors.set(node.name,!0)}))}return this.editors.get("".concat(elementName,"[text]"))||!1}getDependencyMapper(dependencies){const elementMap=new Map(Object.entries(dependencies));return elementMap.forEach(((elementrules,key)=>{const ruleMap=new Map(Object.entries(elementrules));ruleMap.forEach(((ruleComparisons,key)=>{const hideDefine=new Map(Object.entries(ruleComparisons));hideDefine.forEach(((action,compVal)=>{Array.isArray(action)&&(action={...action}),hideDefine.set(compVal,action)})),ruleMap.set(key,hideDefine)})),elementMap.set(key,ruleMap)})),elementMap}mapTemplate(){return new Map([["hide",[]],["show",[]],["lock",[]],["unlock",[]]])}static init(formID,dependencies){return new Form(formID,dependencies)}}return _exports.default=Form,_exports.default}));

//# sourceMappingURL=form.min.js.map