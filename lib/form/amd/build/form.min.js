define("core_form/form",["exports","./changechecker","./events","./submit","./form/rules","./form/dom"],(function(_exports,FormChangeChecker,FormEvents,Submit,_rules,MutateDom){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,FormChangeChecker=_interopRequireWildcard(FormChangeChecker),FormEvents=_interopRequireWildcard(FormEvents),Submit=_interopRequireWildcard(Submit),_rules=(obj=_rules)&&obj.__esModule?obj:{default:obj},MutateDom=_interopRequireWildcard(MutateDom);class Form{constructor(formID,dependencies){_defineProperty(this,"form",void 0),_defineProperty(this,"dependencies",void 0),this.form=document.querySelector("#".concat(formID)),this.dependencies=this.getDependencyMapper(dependencies),this.rules=new _rules.default(this),this.registerEventListeners(),FormChangeChecker.watchForm(this.form)}registerEventListeners(){this.form.addEventListener("change",(e=>{"submit"===e.target.type&&(FormEvents.notifyFormSubmittedByJavascript(this.form),FormChangeChecker.resetFormDirtyState(this.form),Submit.init(e.target.id)),"reset"===e.target.type&&this.form.reset(),this.dependencies.has(e.target.name)&&this.dispatchDependencyRules(e.target)}))}dispatchDependencyRules(target){this.dependencies.get(target.name).forEach(((dependants,ruleName)=>{if(!this.rules[ruleName])return;const elNamesMap=this.rules[ruleName](target);this.domDispatch(elNamesMap)}))}getDependantsOfType(element,type){var _this$dependencies$ge;return"undefined"!==this.dependencies.get(element)&&null!==(_this$dependencies$ge=this.dependencies.get(element).get(type))&&void 0!==_this$dependencies$ge?_this$dependencies$ge:[]}domDispatch(elNamesMap){window.console.log(elNamesMap),elNamesMap.forEach(((elements,domUpdateOpt)=>{if(!MutateDom[domUpdateOpt])return;this.elementNamesToDomNodes(elements).forEach((node=>{}))}))}elementNamesToDomNodes(elementNames){return elementNames.map((element=>this.form.elements.namedItem(element)))}getDependencyMapper(dependencies){const elementMap=new Map(Object.entries(dependencies));return elementMap.forEach(((elementrules,key)=>{const ruleMap=new Map(Object.entries(elementrules));ruleMap.forEach(((ruleComparisons,key)=>{ruleMap.set(key,new Map(Object.entries(ruleComparisons)))})),elementMap.set(key,ruleMap)})),elementMap}static init(formID,dependencies){return new Form(formID,dependencies)}}return _exports.default=Form,_exports.default}));

//# sourceMappingURL=form.min.js.map