{"version":3,"file":"stickycolspan.min.js","sources":["../src/stickycolspan.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module for fixing the position of sticky headers with multiple colspans\n *\n * @module      gradereport_grader/stickycolspan\n * @copyright   2022 Bas Brands <bas@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst SELECTORS = {\n    GRADEPARENT: '.gradeparent',\n    STUDENTHEADER: '#studentheader',\n    TABLEHEADER: 'th.header',\n    BEHAT: 'body.behat-site',\n    AVERAGEROW: 'tr.lastrow',\n};\n\n/**\n * Initialize module\n */\nexport const init = () => {\n    if (document.querySelector(SELECTORS.BEHAT)) {\n        return;\n    }\n    const grader = document.querySelector(SELECTORS.GRADEPARENT);\n    const studentHeader = grader.querySelector(SELECTORS.STUDENTHEADER);\n    const leftOffset = getComputedStyle(studentHeader).getPropertyValue('left');\n    const rightOffset = getComputedStyle(studentHeader).getPropertyValue('right');\n\n    const tableHeaders = grader.querySelectorAll(SELECTORS.TABLEHEADER);\n\n    for (let i = 0; i < tableHeaders.length; i++) {\n        if (tableHeaders[i].colSpan > 1) {\n            const addOffset = (tableHeaders[i].offsetWidth - studentHeader.offsetWidth);\n            if (window.right_to_left()) {\n                tableHeaders[i].style.right = 'calc(' + rightOffset + ' - ' + addOffset + 'px )';\n            } else {\n                tableHeaders[i].style.left = 'calc(' + leftOffset + ' - ' + addOffset + 'px )';\n            }\n        } else {\n            tableHeaders[i].style.zIndex = tableHeaders.length - i;\n        }\n    }\n\n};\n"],"names":["SELECTORS","_exports","init","document","querySelector","grader","studentHeader","leftOffset","getComputedStyle","getPropertyValue","rightOffset","tableHeaders","querySelectorAll","i","length","colSpan","addOffset","offsetWidth","window","right_to_left","style","right","left","zIndex"],"mappings":";;;;;;;;AAuBA,MAAMA,sBACW,eADXA,wBAEa,iBAFbA,sBAGW,YAHXA,gBAIK,kBA+BTC,SAAAC,KAxBkBA,KAChB,GAAIC,SAASC,cAAcJ,iBACvB,OAEJ,MAAMK,OAASF,SAASC,cAAcJ,uBAChCM,cAAgBD,OAAOD,cAAcJ,yBACrCO,WAAaC,iBAAiBF,eAAeG,iBAAiB,QAC9DC,YAAcF,iBAAiBF,eAAeG,iBAAiB,SAE/DE,aAAeN,OAAOO,iBAAiBZ,uBAE7C,IAAK,IAAIa,EAAI,EAAGA,EAAIF,aAAaG,OAAQD,IACrC,GAAIF,aAAaE,GAAGE,QAAU,EAAG,CAC7B,MAAMC,UAAaL,aAAaE,GAAGI,YAAcX,cAAcW,YAC3DC,OAAOC,gBACPR,aAAaE,GAAGO,MAAMC,MAAQ,QAAUX,YAAc,MAAQM,UAAY,OAE1EL,aAAaE,GAAGO,MAAME,KAAO,QAAUf,WAAa,MAAQS,UAAY,MAEhF,MACIL,aAAaE,GAAGO,MAAMG,OAASZ,aAAaG,OAASD,CAE7D,CAEF"}