{"version":3,"file":"collapse.min.js","sources":["../src/collapse.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allow the user to show and hide columns of the report at will.\n *\n * @module    gradereport_grader/collapse\n * @copyright 2023 Mathew May <mathew.solutions>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Pending from 'core/pending';\nimport CustomEvents from \"core/custom_interaction_events\";\nimport * as Repository from 'gradereport_grader/collapse/repository';\nimport Notification from 'core/notification';\n//import {gradebookSearchClass} from 'gradereport_grader/search/search_class';\nimport * as Templates from 'core/templates';\nimport {debounce} from 'core/utils';\n\nlet userPrefs;\nlet colsToHide;\n\n// Contain our selectors within this file until they could be of use elsewhere.\nconst selectors = {\n    component: '.collapse-columns',\n    trigger: '.collapsecolumn',\n    dropdown: '.collapsecolumndropdown',\n    parentDomNode: '.collapse-columns',\n    cellClass: '.collapsible.user',\n    input: '[data-action=\"search\"]',\n    clearSearch: '[data-action=\"clearsearch\"]',\n    resultContainer: '[data-region=\"search-result-items-container\"]',\n    userid: '[data-region=\"userid\"]',\n    formDropdown: '.columnsdropdownform',\n    formItems: {\n        type: 'submit',\n        save: 'save',\n        cancel: 'cancel'\n    }\n};\n\nconst component = document.querySelector(selectors.component);\nconst searchInput = component.querySelector(selectors.input);\nconst clearSearchButton = component.querySelector(selectors.clearSearch);\nconst resultContainer = component.querySelector(selectors.resultContainer);\nconst userID = component.querySelector(selectors.userid).dataset.userid;\n\nconst clickFunc = (e) => {\n    //e.preventDefault();\n    // Prevent the usual form behaviour.\n    if (e.target.closest(selectors.formDropdown)) {\n        if (e.target.dataset.action === selectors.formItems.save) {\n            const form = component.querySelector(selectors.formDropdown);\n            form.addEventListener('submit', async(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                // Get the users' checked columns to change.\n                const checkedItems = [...form.elements].filter(item => item.checked);\n                checkedItems.forEach((item) => {\n                    const idx = colsToHide.indexOf(item);\n                    colsToHide.splice(idx, 1);\n                    const nodes = [...document.querySelectorAll(`${selectors.cellClass}${item.dataset.collapse}`)];\n                    nodes.forEach((element) => {\n                        if (element.classList.contains('d-none')) {\n                            element.classList.remove('d-none');\n                            element.setAttribute('aria-expanded', 'false');\n                        } else {\n                            element.classList.add('d-none');\n                            element.setAttribute('aria-expanded', 'true');\n                        }\n                    });\n                    // Update table then rerender the search widget.\n                });\n                const preferences = [{\n                    'name': 'gradereport_grader_collapsed_columns',\n                    'value': `${colsToHide.join(',')}`,\n                    'userid': userID\n                }];\n                Repository.prefSet(preferences);\n                // TODO: Placeholder.\n                const filteredResults = filterfunc(colsToHide, searchInput.value);\n                const filtermatchResults = filtermatch(filteredResults);\n                await renderfunc(filtermatchResults, colsToHide, userID, resultContainer, searchInput.value);\n            }, false);\n        }\n        if (e.target.dataset.action === selectors.formItems.cancel) {\n            window.console.log('cancel');\n        }\n    }\n};\n\nconst registerListenerEvents = () => {\n    const events = [\n        'click',\n        CustomEvents.events.activate,\n        CustomEvents.events.keyboardActivate\n    ];\n    CustomEvents.define(document, events);\n\n    // Register events.\n    events.forEach((event) => {\n        document.addEventListener(event, e => clickFunc(e));\n    });\n};\n\nconst registerInputEvents = () => {\n    // Register & handle the text input.\n    searchInput.addEventListener('input', debounce(async() => {\n        // We can also require a set amount of input before search.\n        if (searchInput.value === '') {\n            // Hide the \"clear\" search button in the search bar.\n            clearSearchButton.classList.add('d-none');\n        } else {\n            // Display the \"clear\" search button in the search bar.\n            clearSearchButton.classList.remove('d-none');\n        }\n        const filteredResults = filterfunc(colsToHide, searchInput.value);\n        const filtermatchResults = filtermatch(filteredResults);\n        await renderfunc(filtermatchResults, colsToHide, userID, resultContainer, searchInput.value);\n    }, 300));\n};\n\nexport const init = async() => {\n    const pendingPromise = new Pending();\n\n    //new gradebookSearchClass(fetchFilterbleData(), filter(), filterMatchIndicator(), render());\n\n    userPrefs = await data(userID);\n    // Optionally chain the split and nullishly check if the array has contents.\n    colsToHide = userPrefs[0].value?.split(',') ?? [];\n\n    registerListenerEvents();\n    registerInputEvents();\n    pendingPromise.resolve();\n};\n\n/**\n * Get the data we will be searching against in this component.\n *\n * @returns {function(*): Promise<*>}\n */\nconst fetchFilterbleData = () => {\n    return (userID) => {\n        return Repository.prefFetch(userID).then(r => {\n            return r.preferences;\n        }).catch(Notification.exception);\n    };\n};\n\n/**\n * Dictate to the search component how and what we want to match upon.\n *\n * @returns {function(*, *): *}\n */\nconst filter = () => {\n    return (dataset, searchTerm) => {\n        const preppedSearchTerm = searchTerm.toLowerCase();\n        return dataset.filter((col) => {\n            if (col === \"\") {\n                return false;\n            }\n            return col.toString().toLowerCase().includes(preppedSearchTerm);\n        });\n    };\n};\n\nconst filterMatchIndicator = () => {\n    /**\n     * Given we have a subset of the dataset, set the field that we matched upon to inform the end user.\n     *\n     * @param {Array} matchedResultsSubset The results we will render out.\n     * @returns {Array} The results with the matched fields inserted.\n     */\n    return (matchedResultsSubset) => {\n        return matchedResultsSubset;\n    };\n};\n\n/**\n * Build the content then replace the node.\n *\n */\nconst render = () => {\n    return async(results, dataset, courseID, resultContainer, searchTerm) => {\n        const {html, js} = await Templates.renderForPromise('gradereport_grader/collapse/collapseresults', {\n            'results': results,\n            'currentvalue': searchTerm,\n        });\n        Templates.replaceNodeContents(resultContainer, html, js);\n    };\n};\n\n// TODO: Move this into the class eventually.\nconst data = fetchFilterbleData();\nconst filterfunc = filter();\n// TODO: Make this optional in the base class?\nconst filtermatch = filterMatchIndicator();\nconst renderfunc = render();\n"],"names":["userPrefs","colsToHide","selectors","type","save","cancel","component","document","querySelector","searchInput","clearSearchButton","resultContainer","userID","dataset","userid","registerListenerEvents","events","CustomEvents","activate","keyboardActivate","define","forEach","event","addEventListener","e","target","closest","action","form","async","preventDefault","stopPropagation","elements","filter","item","checked","idx","indexOf","splice","querySelectorAll","collapse","element","classList","contains","remove","setAttribute","add","preferences","join","Repository","prefSet","filteredResults","filterfunc","value","filtermatchResults","filtermatch","renderfunc","window","console","log","clickFunc","pendingPromise","Pending","data","_userPrefs$0$value","split","resolve","prefFetch","then","r","catch","Notification","exception","searchTerm","preppedSearchTerm","toLowerCase","col","toString","includes","matchedResultsSubset","results","courseID","html","js","Templates","renderForPromise","replaceNodeContents"],"mappings":";;;;;;;SA+BIA,UACAC,sWAGEC,oBACS,oBADTA,oBAKS,oBALTA,gBAMK,yBANLA,sBAOW,8BAPXA,0BAQe,gDARfA,iBASM,yBATNA,uBAUY,uBAVZA,oBAWS,CACPC,KAAM,SACNC,KAAM,OACNC,OAAQ,UAIVC,UAAYC,SAASC,cAAcN,qBACnCO,YAAcH,UAAUE,cAAcN,iBACtCQ,kBAAoBJ,UAAUE,cAAcN,uBAC5CS,gBAAkBL,UAAUE,cAAcN,2BAC1CU,OAASN,UAAUE,cAAcN,kBAAkBW,QAAQC,OA8C3DC,uBAAyB,WACrBC,OAAS,CACX,QACAC,mCAAaD,OAAOE,SACpBD,mCAAaD,OAAOG,qDAEXC,OAAOb,SAAUS,QAG9BA,OAAOK,SAASC,QACZf,SAASgB,iBAAiBD,OAAOE,GAtDtBA,CAAAA,OAGXA,EAAEC,OAAOC,QAAQxB,wBAAyB,IACtCsB,EAAEC,OAAOZ,QAAQc,SAAWzB,oBAAoBE,KAAM,OAChDwB,KAAOtB,UAAUE,cAAcN,wBACrC0B,KAAKL,iBAAiB,UAAUM,MAAAA,IAC5BL,EAAEM,iBACFN,EAAEO,kBAEmB,IAAIH,KAAKI,UAAUC,QAAOC,MAAQA,KAAKC,UAC/Cd,SAASa,aACZE,IAAMnC,WAAWoC,QAAQH,MAC/BjC,WAAWqC,OAAOF,IAAK,GACT,IAAI7B,SAASgC,2BAAoBrC,4BAAsBgC,KAAKrB,QAAQ2B,YAC5EnB,SAASoB,UACPA,QAAQC,UAAUC,SAAS,WAC3BF,QAAQC,UAAUE,OAAO,UACzBH,QAAQI,aAAa,gBAAiB,WAEtCJ,QAAQC,UAAUI,IAAI,UACtBL,QAAQI,aAAa,gBAAiB,qBAK5CE,YAAc,CAAC,MACT,uDACI9C,WAAW+C,KAAK,aAClBpC,SAEdqC,WAAWC,QAAQH,mBAEbI,gBAAkBC,WAAWnD,WAAYQ,YAAY4C,OACrDC,mBAAqBC,YAAYJ,uBACjCK,WAAWF,mBAAoBrD,WAAYW,OAAQD,gBAAiBF,YAAY4C,UACvF,GAEH7B,EAAEC,OAAOZ,QAAQc,SAAWzB,oBAAoBG,QAChDoD,OAAOC,QAAQC,IAAI,YAeeC,CAAUpC,uBAqBpCK,6DACVgC,eAAiB,IAAIC,iBAI3B9D,gBAAkB+D,KAAKnD,QAEvBX,oEAAaD,UAAU,GAAGqD,2CAAbW,mBAAoBC,MAAM,4DAAQ,GAE/ClD,yBAxBAN,YAAYc,iBAAiB,SAAS,oBAASM,UAEjB,KAAtBpB,YAAY4C,MAEZ3C,kBAAkBgC,UAAUI,IAAI,UAGhCpC,kBAAkBgC,UAAUE,OAAO,gBAEjCO,gBAAkBC,WAAWnD,WAAYQ,YAAY4C,OACrDC,mBAAqBC,YAAYJ,uBACjCK,WAAWF,mBAAoBrD,WAAYW,OAAQD,gBAAiBF,YAAY4C,SACvF,MAcHQ,eAAeK,iBA4DbH,KAnDMnD,QACGqC,WAAWkB,UAAUvD,QAAQwD,MAAKC,GAC9BA,EAAEtB,cACVuB,MAAMC,sBAAaC,WAiDxBpB,WAvCK,CAACvC,QAAS4D,oBACPC,kBAAoBD,WAAWE,qBAC9B9D,QAAQoB,QAAQ2C,KACP,KAARA,KAGGA,IAAIC,WAAWF,cAAcG,SAASJ,sBAmCnDnB,YAvBMwB,sBACGA,qBAuBTvB,WAdK3B,MAAMmD,QAASnE,QAASoE,SAAUtE,gBAAiB8D,oBAChDS,KAACA,KAADC,GAAOA,UAAYC,UAAUC,iBAAiB,8CAA+C,SACpFL,qBACKP,aAEpBW,UAAUE,oBAAoB3E,gBAAiBuE,KAAMC"}