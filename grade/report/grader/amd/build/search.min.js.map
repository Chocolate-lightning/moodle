{"version":3,"file":"search.min.js","sources":["../src/search.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allow the user to search for learners within the grader report.\n * Have to basically search twice on the dataset to avoid passing around massive csv params whilst allowing debouncing.\n *\n * @module    gradereport_grader/search\n * @copyright 2023 Mathew May <mathew.solutions>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport GradebookSearchClass from 'gradereport_grader/search/search_class';\nimport * as Repository from 'gradereport_grader/search/repository';\nimport {get_strings as getStrings} from 'core/str';\nimport Url from 'core/url';\nimport * as Templates from 'core/templates';\n\nconst bannedFilterFields = ['profileimageurlsmall', 'profileimageurl', 'id', 'link', 'matchingField', 'matchingFieldName'];\n\n// Define our standard lookups.\nconst selectors = {\n    component: '.user-search',\n    courseid: '[data-region=\"courseid\"]',\n};\nconst component = document.querySelector(selectors.component);\nconst courseID = component.querySelector(selectors.courseid).dataset.courseid;\n\nexport default class UserSearch extends GradebookSearchClass {\n\n    // A map of user profile field names that is human-readable.\n    profilestringmap = null;\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * Build the content then replace the node.\n     */\n    async renderDropdown() {\n        const {html, js} = await Templates.renderForPromise('gradereport_grader/search/resultset', {\n            users: this.results,\n            hasusers: this.results.length > 0,\n            total: this.dataset.length,\n            found: this.results.length,\n            searchterm: this.searchTerm,\n            selectall: this.selectAllResultsLink(),\n        });\n        Templates.replaceNodeContents(this.searchDropdown, html, js);\n    }\n\n    /**\n     * Get the data we will be searching against in this component.\n     *\n     * @returns {Promise<*>}\n     */\n    fetchDataset() {\n        return Repository.userFetch(courseID).then((r) => r.users);\n    }\n\n    /**\n     * Dictate to the search component how and what we want to match upon.\n     *\n     * @returns {Array} The users that match the given criteria.\n     */\n    async filterDataset() {\n        // Conditionally fetch the users we want to search upon.\n        this.dataset = this.dataset || await this.fetchDataset();\n\n        return this.dataset.filter((user) => Object.keys(user).some((key) => {\n            if (user[key] === \"\" || bannedFilterFields.includes(key)) {\n                return false;\n            }\n            return user[key].toString().toLowerCase().includes(this.preppedSearchTerm);\n        }));\n    }\n\n    /**\n     * Given we have a subset of the dataset, set the field that we matched upon to inform the end user.\n     *\n     * @returns {Array} The results with the matched fields inserted.\n     */\n    async filterMatchDataset() {\n        // Conditionally grab the user profile field name string map.\n        this.profilestringmap = this.profilestringmap || await fetchRequiredStrings();\n\n        this.results = this.matchedResults.map((user) => {\n            for (const [key, value] of Object.entries(user)) {\n                const valueString = value.toString().toLowerCase();\n                if (!valueString.includes(this.preppedSearchTerm)) {\n                    continue;\n                }\n                // Ensure we have a good string, otherwise fallback to the key.\n                user.matchingFieldName = this.profilestringmap.get(key) ?? key;\n                user.matchingField = valueString.replace(\n                    this.preppedSearchTerm,\n                    `<span class=\"font-weight-bold\">${this.searchTerm}</span>`\n                );\n                user.link = this.selectOneLink(user.id);\n                break;\n            }\n            return user;\n        });\n    }\n\n    /**\n     * The handler for when a user interacts with the component.\n     *\n     * @param {Event} e The triggering event that we are working with.\n     */\n    clickHandler(e) {\n        super.clickHandler(e);\n        if (e.target === this.currentViewAll && e.button === 0) {\n            window.location = this.selectAllResultsLink();\n        }\n    }\n\n    /**\n     * The handler for when a user presses a key within the component.\n     *\n     * @param {Event} e The triggering event that we are working with.\n     */\n    keyHandler(e) {\n        super.keyHandler(e);\n\n        if (e.target === this.currentViewAll && (e.key === 'Enter' || e.key === 'Space')) {\n            window.location = this.selectAllResultsLink();\n        }\n\n        // Switch the key presses to handle keyboard nav.\n        switch (e.key) {\n            case 'Enter':\n            case ' ':\n                if (document.activeElement === this.searchInput) {\n                    if (e.key === ' ') {\n                        break;\n                    } else {\n                        window.location = this.selectAllResultsLink();\n                        break;\n                    }\n                }\n                if (document.activeElement === this.clearSearchButton) {\n                    this.closeSearch();\n                    break;\n                }\n                e.preventDefault();\n                window.location = e.target.closest('.dropdown-item').href;\n                break;\n        }\n    }\n\n    /**\n     * Build up the view all link.\n     *\n     * @returns {string|*}\n     */\n    selectAllResultsLink() {\n        return Url.relativeUrl('/grade/report/grader/index.php', {\n            id: courseID,\n            searchvalue: this.searchTerm\n        }, false);\n    }\n\n    /**\n     * Build up the view all link that is dedicated to a particular result.\n     *\n     * @param {Number} userID The ID of the user selected.\n     * @returns {string|*}\n     */\n    selectOneLink(userID) {\n        return Url.relativeUrl('/grade/report/grader/index.php', {\n            id: courseID,\n            searchvalue: this.searchTerm,\n            userid: userID,\n            }, false);\n    }\n\n    static init() {\n        return new UserSearch();\n    }\n}\n\n/**\n * Given the set of profile fields we can possibly search, fetch their strings,\n * so we can report to screen readers the field that matched.\n *\n * @returns {Promise<void>}\n */\nconst fetchRequiredStrings = () => {\n    const requiredStrings = [\n        'username',\n        'firstname',\n        'lastname',\n        'email',\n        'city',\n        'country',\n        'department',\n        'institution',\n        'idnumber',\n        'phone1',\n        'phone2',\n    ];\n    return getStrings(requiredStrings.map((key) => ({key})))\n        .then((stringArray) => new Map(\n            requiredStrings.map((key, index) => ([key, stringArray[index]]))\n        ));\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","_defineProperty","value","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","_toPropertyKey","enumerable","configurable","writable","_search_class","Repository","_url","Templates","bannedFilterFields","selectors","courseID","document","querySelector","dataset","courseid","UserSearch","GradebookSearchClass","constructor","super","async","html","js","renderForPromise","users","this","results","hasusers","length","total","found","searchterm","searchTerm","selectall","selectAllResultsLink","replaceNodeContents","searchDropdown","fetchDataset","userFetch","then","r","filter","user","keys","some","includes","toString","toLowerCase","preppedSearchTerm","profilestringmap","fetchRequiredStrings","matchedResults","map","entries","_this$profilestringma","valueString","matchingFieldName","matchingField","replace","concat","link","selectOneLink","id","clickHandler","e","target","currentViewAll","button","window","location","keyHandler","activeElement","searchInput","clearSearchButton","closeSearch","preventDefault","closest","href","Url","relativeUrl","searchvalue","userID","userid","static","_exports","requiredStrings","getStrings","stringArray","Map","index"],"mappings":"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"}