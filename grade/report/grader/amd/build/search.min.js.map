{"version":3,"file":"search.min.js","sources":["../src/search.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allow the user to search for learners within the grader report.\n * Have to basically search twice on the dataset to avoid passing around massive csv params whilst allowing debouncing.\n *\n * @module    gradereport_grader/search\n * @copyright 2023 Mathew May <mathew.solutions>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport GradebookSearchClass from 'gradereport_grader/search/search_class';\nimport * as Repository from 'gradereport_grader/search/repository';\nimport {get_strings as getStrings} from 'core/str';\nimport Url from 'core/url';\nimport * as Templates from 'core/templates';\n\nconst bannedFilterFields = ['profileimageurlsmall', 'profileimageurl', 'id', 'link', 'matchingField', 'matchingFieldName'];\n\n// Define our standard lookups.\nconst selectors = {\n    component: '.user-search',\n    courseid: '[data-region=\"courseid\"]',\n};\nconst component = document.querySelector(selectors.component);\nconst courseID = component.querySelector(selectors.courseid).dataset.courseid;\n\nexport default class UserSearch extends GradebookSearchClass {\n\n    // A map of user profile field names that is human-readable.\n    profilestringmap = null;\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * Build the content then replace the node.\n     */\n    async renderDropdown() {\n        const {html, js} = await Templates.renderForPromise('gradereport_grader/search/resultset', {\n            users: this.results,\n            hasusers: this.results.length > 0,\n            total: this.dataset.length,\n            found: this.results.length,\n            searchterm: this.searchTerm,\n            selectall: this.selectAllResultsLink(),\n        });\n        Templates.replaceNodeContents(this.searchDropdown, html, js);\n    }\n\n    /**\n     * Get the data we will be searching against in this component.\n     *\n     * @returns {Promise<*>}\n     */\n    fetchDataset() {\n        return Repository.userFetch(courseID).then((r) => r.users);\n    }\n\n    /**\n     * Dictate to the search component how and what we want to match upon.\n     *\n     * @returns {Array} The users that match the given criteria.\n     */\n    async filterDataset() {\n        // Conditionally fetch the users we want to search upon.\n        this.dataset = this.dataset || await this.fetchDataset();\n\n        return this.dataset.filter((user) => Object.keys(user).some((key) => {\n            if (user[key] === \"\" || bannedFilterFields.includes(key)) {\n                return false;\n            }\n            return user[key].toString().toLowerCase().includes(this.preppedSearchTerm);\n        }));\n    }\n\n    /**\n     * Given we have a subset of the dataset, set the field that we matched upon to inform the end user.\n     *\n     * @returns {Array} The results with the matched fields inserted.\n     */\n    async filterMatchDataset() {\n        // Conditionally grab the user profile field name string map.\n        this.profilestringmap = this.profilestringmap || await fetchRequiredStrings();\n\n        this.results = this.matchedResults.map((user) => {\n            for (const [key, value] of Object.entries(user)) {\n                const valueString = value.toString().toLowerCase();\n                if (!valueString.includes(this.preppedSearchTerm)) {\n                    continue;\n                }\n                // Ensure we have a good string, otherwise fallback to the key.\n                user.matchingFieldName = this.profilestringmap.get(key) ?? key;\n                user.matchingField = valueString.replace(\n                    this.preppedSearchTerm,\n                    `<span class=\"font-weight-bold\">${this.searchTerm}</span>`\n                );\n                user.link = this.selectOneLink(user.id);\n                break;\n            }\n            return user;\n        });\n    }\n\n    /**\n     * The handler for when a user interacts with the component.\n     *\n     * @param {Event} e The triggering event that we are working with.\n     */\n    clickHandler(e) {\n        super.clickHandler(e);\n        if (e.target === this.currentViewAll && e.button === 0) {\n            window.location = this.selectAllResultsLink();\n        }\n    }\n\n    /**\n     * The handler for when a user presses a key within the component.\n     *\n     * @param {Event} e The triggering event that we are working with.\n     */\n    keyHandler(e) {\n        super.keyHandler(e);\n\n        if (e.target === this.currentViewAll && (e.key === 'Enter' || e.key === 'Space')) {\n            window.location = this.selectAllResultsLink();\n        }\n\n        // Switch the key presses to handle keyboard nav.\n        switch (e.key) {\n            case 'Enter':\n            case ' ':\n                if (document.activeElement === this.searchInput) {\n                    if (e.key === ' ') {\n                        break;\n                    } else {\n                        window.location = this.selectAllResultsLink();\n                        break;\n                    }\n                }\n                if (document.activeElement === this.clearSearchButton) {\n                    this.closeSearch();\n                    break;\n                }\n                e.preventDefault();\n                window.location = e.target.closest('.dropdown-item').href;\n                break;\n        }\n    }\n\n    /**\n     * Build up the view all link.\n     *\n     * @returns {string|*}\n     */\n    selectAllResultsLink() {\n        return Url.relativeUrl('/grade/report/grader/index.php', {\n            id: courseID,\n            searchvalue: this.searchTerm\n        }, false);\n    }\n\n    /**\n     * Build up the view all link that is dedicated to a particular result.\n     *\n     * @param {Number} userID The ID of the user selected.\n     * @returns {string|*}\n     */\n    selectOneLink(userID) {\n        return Url.relativeUrl('/grade/report/grader/index.php', {\n            id: courseID,\n            searchvalue: this.searchTerm,\n            userid: userID,\n            }, false);\n    }\n\n    static init() {\n        return new UserSearch();\n    }\n}\n\n/**\n * Given the set of profile fields we can possibly search, fetch their strings,\n * so we can report to screen readers the field that matched.\n *\n * @returns {Promise<void>}\n */\nconst fetchRequiredStrings = () => {\n    const requiredStrings = [\n        'username',\n        'firstname',\n        'lastname',\n        'email',\n        'city',\n        'country',\n        'department',\n        'institution',\n        'idnumber',\n        'phone1',\n        'phone2',\n    ];\n    return getStrings(requiredStrings.map((key) => ({key})))\n        .then((stringArray) => new Map(\n            requiredStrings.map((key, index) => ([key, stringArray[index]]))\n        ));\n};\n"],"names":["bannedFilterFields","selectors","courseID","document","querySelector","dataset","courseid","UserSearch","GradebookSearchClass","constructor","html","js","Templates","renderForPromise","users","this","results","hasusers","length","total","found","searchterm","searchTerm","selectall","selectAllResultsLink","replaceNodeContents","searchDropdown","fetchDataset","Repository","userFetch","then","r","filter","user","Object","keys","some","key","includes","toString","toLowerCase","preppedSearchTerm","profilestringmap","fetchRequiredStrings","matchedResults","map","value","entries","valueString","matchingFieldName","get","matchingField","replace","link","selectOneLink","id","clickHandler","e","target","currentViewAll","button","window","location","keyHandler","activeElement","searchInput","clearSearchButton","closeSearch","preventDefault","closest","href","Url","relativeUrl","searchvalue","userID","userid","requiredStrings","stringArray","Map","index"],"mappings":"w/CA6BMA,mBAAqB,CAAC,uBAAwB,kBAAmB,KAAM,OAAQ,gBAAiB,qBAGhGC,oBACS,eADTA,mBAEQ,2BAGRC,SADYC,SAASC,cAAcH,qBACdG,cAAcH,oBAAoBI,QAAQC,eAEhDC,mBAAmBC,sBAKpCC,8CAFmB,6KAUTC,KAACA,KAADC,GAAOA,UAAYC,UAAUC,iBAAiB,sCAAuC,CACvFC,MAAOC,KAAKC,QACZC,SAAUF,KAAKC,QAAQE,OAAS,EAChCC,MAAOJ,KAAKV,QAAQa,OACpBE,MAAOL,KAAKC,QAAQE,OACpBG,WAAYN,KAAKO,WACjBC,UAAWR,KAAKS,yBAEpBZ,UAAUa,oBAAoBV,KAAKW,eAAgBhB,KAAMC,IAQ7DgB,sBACWC,WAAWC,UAAU3B,UAAU4B,MAAMC,GAAMA,EAAEjB,0CAU/CT,QAAUU,KAAKV,eAAiBU,KAAKY,eAEnCZ,KAAKV,QAAQ2B,QAAQC,MAASC,OAAOC,KAAKF,MAAMG,MAAMC,KACvC,KAAdJ,KAAKI,OAAerC,mBAAmBsC,SAASD,MAG7CJ,KAAKI,KAAKE,WAAWC,cAAcF,SAASvB,KAAK0B,uDAWvDC,iBAAmB3B,KAAK2B,wBAA0BC,4BAElD3B,QAAUD,KAAK6B,eAAeC,KAAKZ,WAC/B,MAAOI,IAAKS,SAAUZ,OAAOa,QAAQd,MAAO,iCACvCe,YAAcF,MAAMP,WAAWC,iBAChCQ,YAAYV,SAASvB,KAAK0B,oBAI/BR,KAAKgB,gDAAoBlC,KAAK2B,iBAAiBQ,IAAIb,4DAAQA,IAC3DJ,KAAKkB,cAAgBH,YAAYI,QAC7BrC,KAAK0B,2DAC6B1B,KAAKO,uBAE3CW,KAAKoB,KAAOtC,KAAKuC,cAAcrB,KAAKsB,kBAGjCtB,QASfuB,aAAaC,SACHD,aAAaC,GACfA,EAAEC,SAAW3C,KAAK4C,gBAA+B,IAAbF,EAAEG,SACtCC,OAAOC,SAAW/C,KAAKS,wBAS/BuC,WAAWN,gBACDM,WAAWN,GAEbA,EAAEC,SAAW3C,KAAK4C,gBAA6B,UAAVF,EAAEpB,KAA6B,UAAVoB,EAAEpB,MAC5DwB,OAAOC,SAAW/C,KAAKS,wBAInBiC,EAAEpB,SACD,YACA,OACGlC,SAAS6D,gBAAkBjD,KAAKkD,YAAa,IAC/B,MAAVR,EAAEpB,UAGFwB,OAAOC,SAAW/C,KAAKS,gCAI3BrB,SAAS6D,gBAAkBjD,KAAKmD,kBAAmB,MAC9CC,oBAGTV,EAAEW,iBACFP,OAAOC,SAAWL,EAAEC,OAAOW,QAAQ,kBAAkBC,MAUjE9C,8BACW+C,aAAIC,YAAY,iCAAkC,CACrDjB,GAAIrD,SACJuE,YAAa1D,KAAKO,aACnB,GASPgC,cAAcoB,eACHH,aAAIC,YAAY,iCAAkC,CACrDjB,GAAIrD,SACJuE,YAAa1D,KAAKO,WAClBqD,OAAQD,SACL,wBAIA,IAAInE,8CAUboC,qBAAuB,WACnBiC,gBAAkB,CACpB,WACA,YACA,WACA,QACA,OACA,UACA,aACA,cACA,WACA,SACA,iBAEG,oBAAWA,gBAAgB/B,KAAKR,OAAUA,IAAAA,SAC5CP,MAAM+C,aAAgB,IAAIC,IACvBF,gBAAgB/B,KAAI,CAACR,IAAK0C,QAAW,CAAC1C,IAAKwC,YAAYE"}