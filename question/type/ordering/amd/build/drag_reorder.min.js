define("qtype_ordering/drag_reorder",["exports","jquery","core/dragdrop","core/key_codes"],(function(_exports,_jquery,_dragdrop,_key_codes){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_jquery=_interopRequireDefault(_jquery),_dragdrop=_interopRequireDefault(_dragdrop),_key_codes=_interopRequireDefault(_key_codes);class DragReorder{constructor(config){_defineProperty(this,"config",{reorderStart:"undefined",reorderEnd:"undefined"}),_defineProperty(this,"dragStart",null),_defineProperty(this,"originalOrder",null),_defineProperty(this,"itemDragging",null),_defineProperty(this,"itemMoving",null),_defineProperty(this,"orderList",null),_defineProperty(this,"proxy",null),this.config=config,this.config.itemInPage=this.combineSelectors(config.list,config.item),(0,_jquery.default)(this.config.list).on("mousedown touchstart",config.item,(e=>{const details=_dragdrop.default.prepare(e);details.start&&this.startDrag(e,details)})),(0,_jquery.default)(this.config.list).on("keydown",config.item,(e=>{this.itemMoving=(0,_jquery.default)(e.currentTarget).closest(config.itemInPage),this.originalOrder=this.getCurrentOrder(),this.itemMovedByKeyboard(e,this.itemMoving);const newOrder=this.getCurrentOrder();this.arrayEquals(this.originalOrder,newOrder)||this.config.reorderDone(this.itemMoving.closest(this.config.list),this.itemMoving,newOrder)})),(0,_jquery.default)(this.config.itemInPage).attr("tabindex","0")}startDrag(e,details){this.orderList=(0,_jquery.default)(this.config.list),this.dragStart={time:(new Date).getTime(),x:details.x,y:details.y},this.itemDragging=(0,_jquery.default)(e.currentTarget).closest(this.config.itemInPage),void 0!==this.config.reorderStart&&this.config.reorderStart(this.itemDragging.closest(this.config.list),this.itemDragging),this.originalOrder=this.getCurrentOrder(),this.proxy=(0,_jquery.default)(this.config.proxyHtml.replace("%%ITEM_HTML%%",this.itemDragging.html()).replace("%%ITEM_CLASS_NAME%%",this.itemDragging.attr("class")).replace("%%LIST_CLASS_NAME%%",this.orderList.attr("class"))),(0,_jquery.default)(document.body).append(this.proxy),this.proxy.css("position","absolute"),this.proxy.css(this.itemDragging.offset()),this.proxy.width(this.itemDragging.outerWidth()),this.proxy.height(this.itemDragging.outerHeight()),this.itemDragging.addClass(this.config.itemMovingClass),this.updateProxy(),_dragdrop.default.start(e,this.proxy,this.dragMove.bind(this),this.dragEnd.bind(this))}dragMove(){const list=this.itemDragging.closest(this.config.list);let closestItem=null,closestDistance=null;if(list.find(this.config.item).each(((index,element)=>{const distance=this.distanceBetweenElements(element,this.proxy);(null===closestItem||distance<closestDistance)&&(closestItem=(0,_jquery.default)(element),closestDistance=distance)})),closestItem[0]===this.itemDragging[0])return;const offsetValue=this.midY(this.proxy)<this.midY(closestItem)?20:-20;this.midY(this.proxy)+offsetValue<this.midY(closestItem)?this.itemDragging.insertBefore(closestItem):this.itemDragging.insertAfter(closestItem),this.updateProxy()}updateProxy(){const items=this.itemDragging.closest("ol, ul").find("li"),count=items.length;for(let i=0;i<count;++i)if(this.itemDragging[0]===items[i]){this.proxy.find("li").attr("value",i+1);break}}combineSelectors(outer,inner){let combined=[];return outer.split(",").forEach((firstSelector=>{inner.split(",").forEach((secondSelector=>{combined.push(firstSelector.trim()+" "+secondSelector.trim())}))})),combined.join(", ")}dragEnd(x,y){void 0!==this.config.reorderEnd&&this.config.reorderEnd(this.itemDragging.closest(this.config.list),this.itemDragging);const newOrder=this.getCurrentOrder();this.arrayEquals(this.originalOrder,newOrder)?(new Date).getTime()-this.dragStart.time<500&&Math.abs(this.dragStart.x-x)<10&&Math.abs(this.dragStart.y-y)<10&&this.itemDragging[0].focus():this.config.reorderDone(this.itemDragging.closest(this.config.list),this.itemDragging,newOrder),this.proxy.remove(),this.proxy=null,this.itemDragging.removeClass(this.config.itemMovingClass),this.itemDragging=null,this.dragStart=null}itemMovedByKeyboard(e,current){switch(e.keyCode){case _key_codes.default.space:case _key_codes.default.arrowRight:case _key_codes.default.arrowDown:e.preventDefault(),e.stopPropagation(),current.next().length&&current.next().insertBefore(current);break;case _key_codes.default.arrowLeft:case _key_codes.default.arrowUp:e.preventDefault(),e.stopPropagation(),current.prev().length&&current.prev().insertAfter(current)}}midX(node){return node.offset().left+node.outerWidth()/2}midY(node){return node.offset().top+node.outerHeight()/2}distanceBetweenElements(element1,element2){const[e1,e2]=[(0,_jquery.default)(element1),(0,_jquery.default)(element2)],[dx,dy]=[this.midX(e1)-this.midX(e2),this.midY(e1)-this.midY(e2)];return Math.sqrt(dx*dx+dy*dy)}getCurrentOrder(){return(this.itemDragging||this.itemMoving).closest(this.config.list).find(this.config.item).map(((index,item)=>this.config.idGetter(item))).get()}arrayEquals(a1,a2){return a1.length===a2.length&&a1.every(((v,i)=>v===a2[i]))}static init(sortableid,responseid){new DragReorder({list:"ul#"+sortableid,item:"li.sortableitem",proxyHtml:'<div class="que ordering dragproxy"><ul class="%%LIST_CLASS_NAME%%"><li class="%%ITEM_CLASS_NAME%% item-moving">%%ITEM_HTML%%</li></ul></div>',itemMovingClass:"current-drop",idGetter:item=>(0,_jquery.default)(item).attr("id"),nameGetter:item=>(0,_jquery.default)(item).text,reorderDone:(list,item,newOrder)=>{(0,_jquery.default)("input#"+responseid)[0].value=newOrder.join(",")}})}}return _exports.default=DragReorder,_exports.default}));

//# sourceMappingURL=drag_reorder.min.js.map